// Code generated by MockGen. DO NOT EDIT.
// Source: code.evixo.ru/ncc/ncc-backend/pkg/repository (interfaces: Devices)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	models "code.evixo.ru/ncc/ncc-backend/pkg/models"
	gomock "github.com/golang/mock/gomock"
)

// MockDevices is a mock of Devices interface.
type MockDevices struct {
	ctrl     *gomock.Controller
	recorder *MockDevicesMockRecorder
}

// MockDevicesMockRecorder is the mock recorder for MockDevices.
type MockDevicesMockRecorder struct {
	mock *MockDevices
}

// NewMockDevices creates a new mock instance.
func NewMockDevices(ctrl *gomock.Controller) *MockDevices {
	mock := &MockDevices{ctrl: ctrl}
	mock.recorder = &MockDevicesMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDevices) EXPECT() *MockDevicesMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockDevices) Create(arg0 models.DeviceData) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockDevicesMockRecorder) Create(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockDevices)(nil).Create), arg0)
}

// Delete mocks base method.
func (m *MockDevices) Delete(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockDevicesMockRecorder) Delete(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockDevices)(nil).Delete), arg0)
}

// Get mocks base method.
func (m *MockDevices) Get() ([]models.DeviceData, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get")
	ret0, _ := ret[0].([]models.DeviceData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockDevicesMockRecorder) Get() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockDevices)(nil).Get))
}

// Update mocks base method.
func (m *MockDevices) Update(arg0 models.DeviceData) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Update indicates an expected call of Update.
func (mr *MockDevicesMockRecorder) Update(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockDevices)(nil).Update), arg0)
}
