// Code generated by MockGen. DO NOT EDIT.
// Source: code.evixo.ru/ncc/ncc-backend/pkg/repository (interfaces: InformingsTestCustomers)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	models "code.evixo.ru/ncc/ncc-backend/pkg/models"
	gomock "github.com/golang/mock/gomock"
)

// MockInformingsTestCustomers is a mock of InformingsTestCustomers interface.
type MockInformingsTestCustomers struct {
	ctrl     *gomock.Controller
	recorder *MockInformingsTestCustomersMockRecorder
}

// MockInformingsTestCustomersMockRecorder is the mock recorder for MockInformingsTestCustomers.
type MockInformingsTestCustomersMockRecorder struct {
	mock *MockInformingsTestCustomers
}

// NewMockInformingsTestCustomers creates a new mock instance.
func NewMockInformingsTestCustomers(ctrl *gomock.Controller) *MockInformingsTestCustomers {
	mock := &MockInformingsTestCustomers{ctrl: ctrl}
	mock.recorder = &MockInformingsTestCustomersMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInformingsTestCustomers) EXPECT() *MockInformingsTestCustomersMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockInformingsTestCustomers) Get() ([]models.InformingTestCustomerData, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get")
	ret0, _ := ret[0].([]models.InformingTestCustomerData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockInformingsTestCustomersMockRecorder) Get() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockInformingsTestCustomers)(nil).Get))
}
