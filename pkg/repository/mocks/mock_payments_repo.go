// Code generated by MockGen. DO NOT EDIT.
// Source: code.evixo.ru/ncc/ncc-backend/pkg/repository (interfaces: Payments)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	models "code.evixo.ru/ncc/ncc-backend/pkg/models"
	repository "code.evixo.ru/ncc/ncc-backend/pkg/repository"
	gomock "github.com/golang/mock/gomock"
)

// MockPayments is a mock of Payments interface.
type MockPayments struct {
	ctrl     *gomock.Controller
	recorder *MockPaymentsMockRecorder
}

// MockPaymentsMockRecorder is the mock recorder for MockPayments.
type MockPaymentsMockRecorder struct {
	mock *MockPayments
}

// NewMockPayments creates a new mock instance.
func NewMockPayments(ctrl *gomock.Controller) *MockPayments {
	mock := &MockPayments{ctrl: ctrl}
	mock.recorder = &MockPaymentsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPayments) EXPECT() *MockPaymentsMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockPayments) Create(arg0 models.PaymentData) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockPaymentsMockRecorder) Create(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockPayments)(nil).Create), arg0)
}

// GetPayments mocks base method.
func (m *MockPayments) GetPayments(arg0 repository.TimePeriod) ([]models.PaymentData, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPayments", arg0)
	ret0, _ := ret[0].([]models.PaymentData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPayments indicates an expected call of GetPayments.
func (mr *MockPaymentsMockRecorder) GetPayments(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPayments", reflect.TypeOf((*MockPayments)(nil).GetPayments), arg0)
}

// GetPaymentsByCustomer mocks base method.
func (m *MockPayments) GetPaymentsByCustomer(arg0 string, arg1 repository.TimePeriod) ([]models.PaymentData, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPaymentsByCustomer", arg0, arg1)
	ret0, _ := ret[0].([]models.PaymentData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPaymentsByCustomer indicates an expected call of GetPaymentsByCustomer.
func (mr *MockPaymentsMockRecorder) GetPaymentsByCustomer(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPaymentsByCustomer", reflect.TypeOf((*MockPayments)(nil).GetPaymentsByCustomer), arg0, arg1)
}
