// Code generated by MockGen. DO NOT EDIT.
// Source: code.evixo.ru/ncc/ncc-backend/pkg/repository (interfaces: NasTypes)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	models "code.evixo.ru/ncc/ncc-backend/pkg/models"
	gomock "github.com/golang/mock/gomock"
)

// MockNasTypes is a mock of NasTypes interface.
type MockNasTypes struct {
	ctrl     *gomock.Controller
	recorder *MockNasTypesMockRecorder
}

// MockNasTypesMockRecorder is the mock recorder for MockNasTypes.
type MockNasTypesMockRecorder struct {
	mock *MockNasTypes
}

// NewMockNasTypes creates a new mock instance.
func NewMockNasTypes(ctrl *gomock.Controller) *MockNasTypes {
	mock := &MockNasTypes{ctrl: ctrl}
	mock.recorder = &MockNasTypesMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockNasTypes) EXPECT() *MockNasTypesMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockNasTypes) Create(arg0 models.NasTypeData) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockNasTypesMockRecorder) Create(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockNasTypes)(nil).Create), arg0)
}

// Get mocks base method.
func (m *MockNasTypes) Get() ([]models.NasTypeData, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get")
	ret0, _ := ret[0].([]models.NasTypeData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockNasTypesMockRecorder) Get() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockNasTypes)(nil).Get))
}

// Upsert mocks base method.
func (m *MockNasTypes) Upsert(arg0 models.NasTypeData) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Upsert", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Upsert indicates an expected call of Upsert.
func (mr *MockNasTypesMockRecorder) Upsert(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Upsert", reflect.TypeOf((*MockNasTypes)(nil).Upsert), arg0)
}
