// Code generated by MockGen. DO NOT EDIT.
// Source: code.evixo.ru/ncc/ncc-backend/pkg/repository (interfaces: Snapshots)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	models "code.evixo.ru/ncc/ncc-backend/pkg/models"
	repository "code.evixo.ru/ncc/ncc-backend/pkg/repository"
	gomock "github.com/golang/mock/gomock"
)

// MockSnapshots is a mock of Snapshots interface.
type MockSnapshots struct {
	ctrl     *gomock.Controller
	recorder *MockSnapshotsMockRecorder
}

// MockSnapshotsMockRecorder is the mock recorder for MockSnapshots.
type MockSnapshotsMockRecorder struct {
	mock *MockSnapshots
}

// NewMockSnapshots creates a new mock instance.
func NewMockSnapshots(ctrl *gomock.Controller) *MockSnapshots {
	mock := &MockSnapshots{ctrl: ctrl}
	mock.recorder = &MockSnapshotsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSnapshots) EXPECT() *MockSnapshotsMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockSnapshots) Create(arg0 *models.SnapshotData) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockSnapshotsMockRecorder) Create(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockSnapshots)(nil).Create), arg0)
}

// Get mocks base method.
func (m *MockSnapshots) Get(arg0 repository.TimePeriod) ([]models.SnapshotData, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0)
	ret0, _ := ret[0].([]models.SnapshotData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockSnapshotsMockRecorder) Get(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockSnapshots)(nil).Get), arg0)
}
