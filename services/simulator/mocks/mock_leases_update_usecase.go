// Code generated by MockGen. DO NOT EDIT.
// Source: code.evixo.ru/ncc/ncc-backend/services/simulator/interfaces (interfaces: LeasesUpdateUsecase)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockLeasesUpdateUsecase is a mock of LeasesUpdateUsecase interface.
type MockLeasesUpdateUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockLeasesUpdateUsecaseMockRecorder
}

// MockLeasesUpdateUsecaseMockRecorder is the mock recorder for MockLeasesUpdateUsecase.
type MockLeasesUpdateUsecaseMockRecorder struct {
	mock *MockLeasesUpdateUsecase
}

// NewMockLeasesUpdateUsecase creates a new mock instance.
func NewMockLeasesUpdateUsecase(ctrl *gomock.Controller) *MockLeasesUpdateUsecase {
	mock := &MockLeasesUpdateUsecase{ctrl: ctrl}
	mock.recorder = &MockLeasesUpdateUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLeasesUpdateUsecase) EXPECT() *MockLeasesUpdateUsecaseMockRecorder {
	return m.recorder
}

// Execute mocks base method.
func (m *MockLeasesUpdateUsecase) Execute() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Execute")
	ret0, _ := ret[0].(error)
	return ret0
}

// Execute indicates an expected call of Execute.
func (mr *MockLeasesUpdateUsecaseMockRecorder) Execute() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Execute", reflect.TypeOf((*MockLeasesUpdateUsecase)(nil).Execute))
}
