// Code generated by MockGen. DO NOT EDIT.
// Source: code.evixo.ru/ncc/ncc-backend/services/simulator/interfaces (interfaces: InitDictionariesUsecase)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockInitDictionariesUsecase is a mock of InitDictionariesUsecase interface.
type MockInitDictionariesUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockInitDictionariesUsecaseMockRecorder
}

// MockInitDictionariesUsecaseMockRecorder is the mock recorder for MockInitDictionariesUsecase.
type MockInitDictionariesUsecaseMockRecorder struct {
	mock *MockInitDictionariesUsecase
}

// NewMockInitDictionariesUsecase creates a new mock instance.
func NewMockInitDictionariesUsecase(ctrl *gomock.Controller) *MockInitDictionariesUsecase {
	mock := &MockInitDictionariesUsecase{ctrl: ctrl}
	mock.recorder = &MockInitDictionariesUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInitDictionariesUsecase) EXPECT() *MockInitDictionariesUsecaseMockRecorder {
	return m.recorder
}

// Execute mocks base method.
func (m *MockInitDictionariesUsecase) Execute() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Execute")
	ret0, _ := ret[0].(error)
	return ret0
}

// Execute indicates an expected call of Execute.
func (mr *MockInitDictionariesUsecaseMockRecorder) Execute() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Execute", reflect.TypeOf((*MockInitDictionariesUsecase)(nil).Execute))
}
