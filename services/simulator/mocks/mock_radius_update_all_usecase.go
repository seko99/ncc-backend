// Code generated by MockGen. DO NOT EDIT.
// Source: code.evixo.ru/ncc/ncc-backend/services/simulator/interfaces (interfaces: RadiusUpdateAllUsecase)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	dto "code.evixo.ru/ncc/ncc-backend/services/simulator/dto"
	gomock "github.com/golang/mock/gomock"
)

// MockRadiusUpdateAllUsecase is a mock of RadiusUpdateAllUsecase interface.
type MockRadiusUpdateAllUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockRadiusUpdateAllUsecaseMockRecorder
}

// MockRadiusUpdateAllUsecaseMockRecorder is the mock recorder for MockRadiusUpdateAllUsecase.
type MockRadiusUpdateAllUsecaseMockRecorder struct {
	mock *MockRadiusUpdateAllUsecase
}

// NewMockRadiusUpdateAllUsecase creates a new mock instance.
func NewMockRadiusUpdateAllUsecase(ctrl *gomock.Controller) *MockRadiusUpdateAllUsecase {
	mock := &MockRadiusUpdateAllUsecase{ctrl: ctrl}
	mock.recorder = &MockRadiusUpdateAllUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRadiusUpdateAllUsecase) EXPECT() *MockRadiusUpdateAllUsecaseMockRecorder {
	return m.recorder
}

// Execute mocks base method.
func (m *MockRadiusUpdateAllUsecase) Execute(arg0 dto.RadiusUsecaseRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Execute", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Execute indicates an expected call of Execute.
func (mr *MockRadiusUpdateAllUsecaseMockRecorder) Execute(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Execute", reflect.TypeOf((*MockRadiusUpdateAllUsecase)(nil).Execute), arg0)
}
