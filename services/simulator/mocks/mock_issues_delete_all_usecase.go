// Code generated by MockGen. DO NOT EDIT.
// Source: code.evixo.ru/ncc/ncc-backend/services/simulator/interfaces (interfaces: IssuesDeleteAllUsecase)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIssuesDeleteAllUsecase is a mock of IssuesDeleteAllUsecase interface.
type MockIssuesDeleteAllUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockIssuesDeleteAllUsecaseMockRecorder
}

// MockIssuesDeleteAllUsecaseMockRecorder is the mock recorder for MockIssuesDeleteAllUsecase.
type MockIssuesDeleteAllUsecaseMockRecorder struct {
	mock *MockIssuesDeleteAllUsecase
}

// NewMockIssuesDeleteAllUsecase creates a new mock instance.
func NewMockIssuesDeleteAllUsecase(ctrl *gomock.Controller) *MockIssuesDeleteAllUsecase {
	mock := &MockIssuesDeleteAllUsecase{ctrl: ctrl}
	mock.recorder = &MockIssuesDeleteAllUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIssuesDeleteAllUsecase) EXPECT() *MockIssuesDeleteAllUsecaseMockRecorder {
	return m.recorder
}

// Execute mocks base method.
func (m *MockIssuesDeleteAllUsecase) Execute() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Execute")
	ret0, _ := ret[0].(error)
	return ret0
}

// Execute indicates an expected call of Execute.
func (mr *MockIssuesDeleteAllUsecaseMockRecorder) Execute() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Execute", reflect.TypeOf((*MockIssuesDeleteAllUsecase)(nil).Execute))
}
