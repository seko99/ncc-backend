// Code generated by MockGen. DO NOT EDIT.
// Source: code.evixo.ru/ncc/ncc-backend/services/simulator/interfaces (interfaces: SessionsUpdateUsecase)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockSessionsUpdateUsecase is a mock of SessionsUpdateUsecase interface.
type MockSessionsUpdateUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockSessionsUpdateUsecaseMockRecorder
}

// MockSessionsUpdateUsecaseMockRecorder is the mock recorder for MockSessionsUpdateUsecase.
type MockSessionsUpdateUsecaseMockRecorder struct {
	mock *MockSessionsUpdateUsecase
}

// NewMockSessionsUpdateUsecase creates a new mock instance.
func NewMockSessionsUpdateUsecase(ctrl *gomock.Controller) *MockSessionsUpdateUsecase {
	mock := &MockSessionsUpdateUsecase{ctrl: ctrl}
	mock.recorder = &MockSessionsUpdateUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSessionsUpdateUsecase) EXPECT() *MockSessionsUpdateUsecaseMockRecorder {
	return m.recorder
}

// Execute mocks base method.
func (m *MockSessionsUpdateUsecase) Execute() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Execute")
	ret0, _ := ret[0].(error)
	return ret0
}

// Execute indicates an expected call of Execute.
func (mr *MockSessionsUpdateUsecaseMockRecorder) Execute() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Execute", reflect.TypeOf((*MockSessionsUpdateUsecase)(nil).Execute))
}
