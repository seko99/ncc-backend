// Code generated by MockGen. DO NOT EDIT.
// Source: code.evixo.ru/ncc/ncc-backend/services/simulator/interfaces (interfaces: Faker)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockFaker is a mock of Faker interface.
type MockFaker struct {
	ctrl     *gomock.Controller
	recorder *MockFakerMockRecorder
}

// MockFakerMockRecorder is the mock recorder for MockFaker.
type MockFakerMockRecorder struct {
	mock *MockFaker
}

// NewMockFaker creates a new mock instance.
func NewMockFaker(ctrl *gomock.Controller) *MockFaker {
	mock := &MockFaker{ctrl: ctrl}
	mock.recorder = &MockFakerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFaker) EXPECT() *MockFakerMockRecorder {
	return m.recorder
}

// Process mocks base method.
func (m *MockFaker) Process(arg0 bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Process", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Process indicates an expected call of Process.
func (mr *MockFakerMockRecorder) Process(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Process", reflect.TypeOf((*MockFaker)(nil).Process), arg0)
}
