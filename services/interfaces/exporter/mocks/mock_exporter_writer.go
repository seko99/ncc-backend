// Code generated by MockGen. DO NOT EDIT.
// Source: code.evixo.ru/ncc/ncc-backend/services/interfaces/exporter (interfaces: ExportWriter)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"
	time "time"

	exporter "code.evixo.ru/ncc/ncc-backend/services/interfaces/exporter"
	gomock "github.com/golang/mock/gomock"
)

// MockExportWriter is a mock of ExportWriter interface.
type MockExportWriter struct {
	ctrl     *gomock.Controller
	recorder *MockExportWriterMockRecorder
}

// MockExportWriterMockRecorder is the mock recorder for MockExportWriter.
type MockExportWriterMockRecorder struct {
	mock *MockExportWriter
}

// NewMockExportWriter creates a new mock instance.
func NewMockExportWriter(ctrl *gomock.Controller) *MockExportWriter {
	mock := &MockExportWriter{ctrl: ctrl}
	mock.recorder = &MockExportWriterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockExportWriter) EXPECT() *MockExportWriterMockRecorder {
	return m.recorder
}

// GetErrors mocks base method.
func (m *MockExportWriter) GetErrors(arg0 time.Time, arg1, arg2 string, arg3 exporter.ExportData) ([]exporter.ExportData, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetErrors", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].([]exporter.ExportData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetErrors indicates an expected call of GetErrors.
func (mr *MockExportWriterMockRecorder) GetErrors(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetErrors", reflect.TypeOf((*MockExportWriter)(nil).GetErrors), arg0, arg1, arg2, arg3)
}

// Write mocks base method.
func (m *MockExportWriter) Write(arg0 []exporter.ExportData, arg1 ...bool) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0}
	for _, a := range arg1 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "Write", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// Write indicates an expected call of Write.
func (mr *MockExportWriterMockRecorder) Write(arg0 interface{}, arg1 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0}, arg1...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Write", reflect.TypeOf((*MockExportWriter)(nil).Write), varargs...)
}
