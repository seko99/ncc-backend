// Code generated by MockGen. DO NOT EDIT.
// Source: code.evixo.ru/ncc/ncc-backend/services/interfaces (interfaces: Scores)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockScores is a mock of Scores interface.
type MockScores struct {
	ctrl     *gomock.Controller
	recorder *MockScoresMockRecorder
}

// MockScoresMockRecorder is the mock recorder for MockScores.
type MockScoresMockRecorder struct {
	mock *MockScores
}

// NewMockScores creates a new mock instance.
func NewMockScores(ctrl *gomock.Controller) *MockScores {
	mock := &MockScores{ctrl: ctrl}
	mock.recorder = &MockScoresMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockScores) EXPECT() *MockScoresMockRecorder {
	return m.recorder
}

// Process mocks base method.
func (m *MockScores) Process(arg0 bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Process", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Process indicates an expected call of Process.
func (mr *MockScoresMockRecorder) Process(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Process", reflect.TypeOf((*MockScores)(nil).Process), arg0)
}
